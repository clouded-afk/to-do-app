(()=>{"use strict";var t={208:(t,e,n)=>{n.d(e,{A:()=>r});var o=n(354),i=n.n(o),s=n(314),a=n.n(s)()(i());a.push([t.id,':root {\n    --shadow-color: #a8a29e;\n    --accent-color: #14532d;\n    --input-color: #cbd5e1;\n    --submit-color: #15803d;\n    --close-color: #f87171;\n    --edit-button: #0284c7;\n    --active-button: #d4d4d4;\n    --high-priority: #b91c1c;\n    --med-priority: #f97316;\n    --low-priority: #16a34a;\n}\n\n* {\n    font-family: "Roboto Slab", sans-serif;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n\nheader {\n    display: flex;\n    align-items: center;\n    height: 100px;\n    width: 100%;\n    box-shadow: 0 4px 2px -2px var(--shadow-color);\n}\n\nh1 {\n    padding-left: 25px;\n}\n\nh2 {\n    padding-bottom: 5px;\n}\n\n.main-container {\n    display: flex;\n    height: 1140px;\n}\n\n.sidebar {\n    position: relative;\n    width: 20%;\n}\n\n.my-tasks-header, .my-lists-header {\n    width: 90%; \n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    margin: auto;\n    margin-top: 10px;\n}\n\n.line-divider {\n    background-color: black;\n    height: 2px;\n}\n\n.my-tasks, .my-lists {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    margin: 10px;\n}\n\nli {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    list-style: none;\n    width: 100%;\n}\n\n.my-task-button, .my-list-button {\n    text-align: left;\n    width: 70%;\n    height: 40px;\n    padding-left: 15px;\n    margin-bottom: 10px;\n    color: var(--accent-color);\n    font-weight: bold;\n    font-size: 20px;\n    border-radius: 10px;\n    border: none;\n    cursor: pointer;\n}\n\n.my-list-button {\n    margin: auto;\n    margin-left: 14.5%;\n    margin-top: 10px;\n    margin-bottom: 10px;\n}\n\n.list-delete {\n    visibility: hidden;\n    margin: auto;\n    color: var(--high-priority);\n    font-size: 24px;\n    border: none;\n    cursor: pointer;\n}\n\n.active + .list-delete {\n    visibility: visible;\n}\n\n.list-delete:hover {\n    color: var(--close-color);\n}\n\n.active {\n    background-color: var(--active-button);\n}\n\n.new-list-button-container {\n    position: absolute;\n    bottom: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n}\n\n.new-list-button {\n    background-color: var(--accent-color);\n    color: white;\n    font-size: 16px;\n    font-weight: bold;\n    width: 70%;\n    height: 30px;\n    margin-bottom: 15px;\n    border-radius: 20px;\n    border: none;\n    cursor: pointer;\n}\n\n.content-container {\n    height: 100%;\n    width: 80%;\n    overflow: hidden;\n}\n\n.content-header-container {\n    width: 90%;\n    margin: auto;\n}\n\n.content-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: 10px;\n}\n\n.new-task-button {\n    display: none;\n    background-color: var(--accent-color);\n    color: white;\n    font-size: 16px;\n    font-weight: bold;\n    height: 30px;\n    width: 150px;\n    margin-bottom: 5px;\n    border-radius: 20px;\n    border: none;\n    cursor: pointer;\n}\n\n.new-list-button:hover, .new-task-button:hover {\n    background-color: var(--submit-color);\n}\n\n.content {\n    margin: auto;\n    height: 95%;\n    width: 90%;\n    overflow: auto;\n}\n\n.task-container {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    height: 90px;\n    margin: 10px;\n    border-radius: 10px;\n    box-shadow: 2px 2px 2px 2px var(--shadow-color);\n}\n\n.task-header {\n    margin-left: 15px;\n    font-size: 24px;\n    font-weight: bolder;\n}\n\n.task-button-container {\n    position: absolute;\n    right: 0;\n    top: 0;\n    display: flex;\n    width: 125px;\n    margin-right: 10px;\n    margin-top: 5px;\n}\n\n.remove-task, .expand-task {\n    margin: auto;\n    font-size: 24px;\n    width: 50px;\n    padding: 5px;\n    border: none;\n    cursor: pointer;\n}\n\n.myTask-expand {\n    position: absolute;\n    top: 0;\n    right: 0;\n    margin-right: 10px;\n    margin-top: 5px;\n}\n\n.remove-task {\n    color: var(--high-priority);\n}\n\n.remove-task:hover {\n    color: var(--close-color);\n}\n\n.expand-task {\n    color: var(--accent-color);\n}\n\n.expand-task:hover {\n    color: var(--submit-color);\n}\n\n.edit-task {\n    display: none;\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    margin-bottom: 5px;\n    margin-right: 27px;\n    font-size: 24px;\n    border: none;\n    color: var(--edit-button);\n}\n\n.task-description {\n    display: none;\n    font-size: 16px;\n    margin-top: 15px;\n    margin-bottom: 15px;\n    margin-left: 15px;\n    margin-right: 100px;\n    word-wrap: break-word;\n}\n\n.task-date {\n    position: absolute;\n    bottom: 0;\n    margin-left: 15px;\n    margin-bottom: 5px;\n}\n\n.low {\n    border-left: 10px solid var(--low-priority);\n}\n\n.medium {\n    border-left: 10px solid var(--med-priority);\n}\n\n.high {\n    border-left: 10px solid var(--high-priority);\n}\n\n.fa-plus {\n    margin-left: 5px;\n}\n\n.form-header {\n    font-size: 24px;\n    font-weight: bold;\n    color: var(--accent-color);\n    margin: auto;\n    margin-top: 20px;\n    margin-bottom: 20px;\n}\n\n.list-dialog {\n    display: none;\n    align-items: center;\n    justify-content: space-evenly;\n    flex-direction: column;\n    height: 300px;\n    width: 300px;\n    margin: auto;\n    margin-top: 300px;\n    border-radius: 20px;\n    border: none;\n    box-shadow: 2px 2px 2px 2px var(--shadow-color);\n}\n\n.list-form {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n}\n\n#list-name-input {\n    background-color: var(--input-color);\n    height: 30px;\n    width: 90%;\n    margin: 15px;\n    margin-top: 0;\n    margin-bottom: 50px;\n    padding: 10px;\n    border-radius: 10px;\n    border: none;\n}\n\n.list-name-error {\n    display: none;\n    position: absolute;\n    justify-content: center;\n    align-items: center;\n    margin-top: 50px;\n    margin-left: 20px;\n    font-size: 14px;\n    font-style: italic;\n    letter-spacing: .3ch;\n}\n\n#list-submit, .list-close, #task-submit, .task-close, .task-save, .close-edit-task {\n    color: white;\n    font-size: 18px;\n    font-weight: bold;\n    width: 50%;\n    height: 30px;\n    border-radius: 20px;\n    border: none;\n    cursor: pointer;\n}\n\n#list-submit, #task-submit, .task-save {\n    background-color: var(--submit-color);\n    margin: auto;\n}\n\n.list-close, .task-close, .close-edit-task {\n    background-color: var(--close-color);\n}\n\n#task-submit, .task-save {\n    margin-top: 35px;\n    margin-bottom: 10px;\n}\n\n#list-submit:hover, #task-submit:hover, .task-save:hover {\n    background-color: #16a34a;\n}\n\n.list-close:hover, .task-close:hover, .close-edit-task:hover {\n    background-color: #fca5a5;\n}\n\n.edit-form-buttons {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    margin: auto;\n    width: 100%;\n    margin-bottom: 25px;\n}\n\nlabel {\n    margin-left: 20px;\n}\n\n.task-dialog, .edit-task-dialog {\n    display: none;\n    align-items: center;\n    flex-direction: column;\n    width: 600px;\n    height: 550px;\n    margin: auto;\n    margin-top: 250px;\n    border-radius: 10px;\n    border: none;\n    box-shadow: 2px 2px 2px 2px var(--shadow-color);\n}\n\n.task-form, .edit-task-form {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n}\n\n.task-label {\n    margin-left: 90px;\n}\n\n#task-name-input, #edit-task-name {\n    background-color: var(--input-color);\n    width: 70%;\n    height: 30px;\n    padding: 10px;\n    margin: auto;\n    border-radius: 10px;\n    border: none;\n}\n\n#task-description-input, #edit-description {\n    background-color: var(--input-color);\n    resize: none;\n    width: 70%;\n    height: 100px;\n    padding: 10px;\n    margin: auto;\n    border-radius: 20px;\n    border: none;\n}\n\n\n#task-due-date, #task-priority, #edit-due-date, #edit-priority{\n    width: 70%;\n    margin: auto;\n}\n\n.task-name-error, .task-desc-error, .task-date-error, .edit-name-error, .edit-desc-error, .edit-date-error {\n    margin-left: 100px;\n    font-size: 12px;\n    letter-spacing: .25ch;\n    font-style: italic;\n    margin-bottom: 10px;\n}\n\n\nfooter {\n    background-color: var(--background-color);\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    box-shadow: 2px -2px 0px 0px var(--shadow-color);\n    font-size: 16px;\n}\n\n.footer-link {\n    text-decoration: none;\n    font-size: 16px;\n}\n\n.footer-link:visited {\n    color: black;\n}\n\n.footer-link:hover {\n    color: var(--accent-color);\n}\n\n.fa-github {\n    margin-left: 5px;\n    font-size: 18px;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[':root {\n    --shadow-color: #a8a29e;\n    --accent-color: #14532d;\n    --input-color: #cbd5e1;\n    --submit-color: #15803d;\n    --close-color: #f87171;\n    --edit-button: #0284c7;\n    --active-button: #d4d4d4;\n    --high-priority: #b91c1c;\n    --med-priority: #f97316;\n    --low-priority: #16a34a;\n}\n\n* {\n    font-family: "Roboto Slab", sans-serif;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n\nheader {\n    display: flex;\n    align-items: center;\n    height: 100px;\n    width: 100%;\n    box-shadow: 0 4px 2px -2px var(--shadow-color);\n}\n\nh1 {\n    padding-left: 25px;\n}\n\nh2 {\n    padding-bottom: 5px;\n}\n\n.main-container {\n    display: flex;\n    height: 1140px;\n}\n\n.sidebar {\n    position: relative;\n    width: 20%;\n}\n\n.my-tasks-header, .my-lists-header {\n    width: 90%; \n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    margin: auto;\n    margin-top: 10px;\n}\n\n.line-divider {\n    background-color: black;\n    height: 2px;\n}\n\n.my-tasks, .my-lists {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    margin: 10px;\n}\n\nli {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    list-style: none;\n    width: 100%;\n}\n\n.my-task-button, .my-list-button {\n    text-align: left;\n    width: 70%;\n    height: 40px;\n    padding-left: 15px;\n    margin-bottom: 10px;\n    color: var(--accent-color);\n    font-weight: bold;\n    font-size: 20px;\n    border-radius: 10px;\n    border: none;\n    cursor: pointer;\n}\n\n.my-list-button {\n    margin: auto;\n    margin-left: 14.5%;\n    margin-top: 10px;\n    margin-bottom: 10px;\n}\n\n.list-delete {\n    visibility: hidden;\n    margin: auto;\n    color: var(--high-priority);\n    font-size: 24px;\n    border: none;\n    cursor: pointer;\n}\n\n.active + .list-delete {\n    visibility: visible;\n}\n\n.list-delete:hover {\n    color: var(--close-color);\n}\n\n.active {\n    background-color: var(--active-button);\n}\n\n.new-list-button-container {\n    position: absolute;\n    bottom: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n}\n\n.new-list-button {\n    background-color: var(--accent-color);\n    color: white;\n    font-size: 16px;\n    font-weight: bold;\n    width: 70%;\n    height: 30px;\n    margin-bottom: 15px;\n    border-radius: 20px;\n    border: none;\n    cursor: pointer;\n}\n\n.content-container {\n    height: 100%;\n    width: 80%;\n    overflow: hidden;\n}\n\n.content-header-container {\n    width: 90%;\n    margin: auto;\n}\n\n.content-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: 10px;\n}\n\n.new-task-button {\n    display: none;\n    background-color: var(--accent-color);\n    color: white;\n    font-size: 16px;\n    font-weight: bold;\n    height: 30px;\n    width: 150px;\n    margin-bottom: 5px;\n    border-radius: 20px;\n    border: none;\n    cursor: pointer;\n}\n\n.new-list-button:hover, .new-task-button:hover {\n    background-color: var(--submit-color);\n}\n\n.content {\n    margin: auto;\n    height: 95%;\n    width: 90%;\n    overflow: auto;\n}\n\n.task-container {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    height: 90px;\n    margin: 10px;\n    border-radius: 10px;\n    box-shadow: 2px 2px 2px 2px var(--shadow-color);\n}\n\n.task-header {\n    margin-left: 15px;\n    font-size: 24px;\n    font-weight: bolder;\n}\n\n.task-button-container {\n    position: absolute;\n    right: 0;\n    top: 0;\n    display: flex;\n    width: 125px;\n    margin-right: 10px;\n    margin-top: 5px;\n}\n\n.remove-task, .expand-task {\n    margin: auto;\n    font-size: 24px;\n    width: 50px;\n    padding: 5px;\n    border: none;\n    cursor: pointer;\n}\n\n.myTask-expand {\n    position: absolute;\n    top: 0;\n    right: 0;\n    margin-right: 10px;\n    margin-top: 5px;\n}\n\n.remove-task {\n    color: var(--high-priority);\n}\n\n.remove-task:hover {\n    color: var(--close-color);\n}\n\n.expand-task {\n    color: var(--accent-color);\n}\n\n.expand-task:hover {\n    color: var(--submit-color);\n}\n\n.edit-task {\n    display: none;\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    margin-bottom: 5px;\n    margin-right: 27px;\n    font-size: 24px;\n    border: none;\n    color: var(--edit-button);\n}\n\n.task-description {\n    display: none;\n    font-size: 16px;\n    margin-top: 15px;\n    margin-bottom: 15px;\n    margin-left: 15px;\n    margin-right: 100px;\n    word-wrap: break-word;\n}\n\n.task-date {\n    position: absolute;\n    bottom: 0;\n    margin-left: 15px;\n    margin-bottom: 5px;\n}\n\n.low {\n    border-left: 10px solid var(--low-priority);\n}\n\n.medium {\n    border-left: 10px solid var(--med-priority);\n}\n\n.high {\n    border-left: 10px solid var(--high-priority);\n}\n\n.fa-plus {\n    margin-left: 5px;\n}\n\n.form-header {\n    font-size: 24px;\n    font-weight: bold;\n    color: var(--accent-color);\n    margin: auto;\n    margin-top: 20px;\n    margin-bottom: 20px;\n}\n\n.list-dialog {\n    display: none;\n    align-items: center;\n    justify-content: space-evenly;\n    flex-direction: column;\n    height: 300px;\n    width: 300px;\n    margin: auto;\n    margin-top: 300px;\n    border-radius: 20px;\n    border: none;\n    box-shadow: 2px 2px 2px 2px var(--shadow-color);\n}\n\n.list-form {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n}\n\n#list-name-input {\n    background-color: var(--input-color);\n    height: 30px;\n    width: 90%;\n    margin: 15px;\n    margin-top: 0;\n    margin-bottom: 50px;\n    padding: 10px;\n    border-radius: 10px;\n    border: none;\n}\n\n.list-name-error {\n    display: none;\n    position: absolute;\n    justify-content: center;\n    align-items: center;\n    margin-top: 50px;\n    margin-left: 20px;\n    font-size: 14px;\n    font-style: italic;\n    letter-spacing: .3ch;\n}\n\n#list-submit, .list-close, #task-submit, .task-close, .task-save, .close-edit-task {\n    color: white;\n    font-size: 18px;\n    font-weight: bold;\n    width: 50%;\n    height: 30px;\n    border-radius: 20px;\n    border: none;\n    cursor: pointer;\n}\n\n#list-submit, #task-submit, .task-save {\n    background-color: var(--submit-color);\n    margin: auto;\n}\n\n.list-close, .task-close, .close-edit-task {\n    background-color: var(--close-color);\n}\n\n#task-submit, .task-save {\n    margin-top: 35px;\n    margin-bottom: 10px;\n}\n\n#list-submit:hover, #task-submit:hover, .task-save:hover {\n    background-color: #16a34a;\n}\n\n.list-close:hover, .task-close:hover, .close-edit-task:hover {\n    background-color: #fca5a5;\n}\n\n.edit-form-buttons {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    margin: auto;\n    width: 100%;\n    margin-bottom: 25px;\n}\n\nlabel {\n    margin-left: 20px;\n}\n\n.task-dialog, .edit-task-dialog {\n    display: none;\n    align-items: center;\n    flex-direction: column;\n    width: 600px;\n    height: 550px;\n    margin: auto;\n    margin-top: 250px;\n    border-radius: 10px;\n    border: none;\n    box-shadow: 2px 2px 2px 2px var(--shadow-color);\n}\n\n.task-form, .edit-task-form {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n}\n\n.task-label {\n    margin-left: 90px;\n}\n\n#task-name-input, #edit-task-name {\n    background-color: var(--input-color);\n    width: 70%;\n    height: 30px;\n    padding: 10px;\n    margin: auto;\n    border-radius: 10px;\n    border: none;\n}\n\n#task-description-input, #edit-description {\n    background-color: var(--input-color);\n    resize: none;\n    width: 70%;\n    height: 100px;\n    padding: 10px;\n    margin: auto;\n    border-radius: 20px;\n    border: none;\n}\n\n\n#task-due-date, #task-priority, #edit-due-date, #edit-priority{\n    width: 70%;\n    margin: auto;\n}\n\n.task-name-error, .task-desc-error, .task-date-error, .edit-name-error, .edit-desc-error, .edit-date-error {\n    margin-left: 100px;\n    font-size: 12px;\n    letter-spacing: .25ch;\n    font-style: italic;\n    margin-bottom: 10px;\n}\n\n\nfooter {\n    background-color: var(--background-color);\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    box-shadow: 2px -2px 0px 0px var(--shadow-color);\n    font-size: 16px;\n}\n\n.footer-link {\n    text-decoration: none;\n    font-size: 16px;\n}\n\n.footer-link:visited {\n    color: black;\n}\n\n.footer-link:hover {\n    color: var(--accent-color);\n}\n\n.fa-github {\n    margin-left: 5px;\n    font-size: 18px;\n}\n'],sourceRoot:""}]);const r=a},314:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,i,s){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(o)for(var r=0;r<this.length;r++){var A=this[r][0];null!=A&&(a[A]=!0)}for(var l=0;l<t.length;l++){var d=[].concat(t[l]);o&&a[d[0]]||(void 0!==s&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=s),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),e.push(d))}},e}},354:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),s="/*# ".concat(i," */");return[e].concat([s]).join("\n")}return[e].join("\n")}},72:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var s={},a=[],r=0;r<t.length;r++){var A=t[r],l=o.base?A[0]+o.base:A[0],d=s[l]||0,c="".concat(l," ").concat(d);s[l]=d+1;var u=n(c),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=i(p,o);o.byIndex=r,e.splice(r,0,{identifier:c,updater:m,references:1})}a.push(c)}return a}function i(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,i){var s=o(t=t||[],i=i||{});return function(t){t=t||[];for(var a=0;a<s.length;a++){var r=n(s[a]);e[r].references--}for(var A=o(t,i),l=0;l<s.length;l++){var d=n(s[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}s=A}}},659:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},540:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},56:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},825:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},113:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(o){var i=e[o];if(void 0!==i)return i.exports;var s=e[o]={id:o,exports:{}};return t[o](s,s.exports,n),s.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0;var o=n(72),i=n.n(o),s=n(825),a=n.n(s),r=n(659),A=n.n(r),l=n(56),d=n.n(l),c=n(540),u=n.n(c),p=n(113),m=n.n(p),g=n(208),y={};function C(t){const e=Object.prototype.toString.call(t);return t instanceof Date||"object"==typeof t&&"[object Date]"===e?new t.constructor(+t):"number"==typeof t||"[object Number]"===e||"string"==typeof t||"[object String]"===e?new Date(t):new Date(NaN)}function B(t,e){const n=C(t),o=C(e),i=n.getTime()-o.getTime();return i<0?-1:i>0?1:i}function h(t,e){return t instanceof Date?new t.constructor(e):new Date(e)}function x(t){return h(t,Date.now())}function k(t){const e=C(t);return e.setHours(0,0,0,0),e}function b(t){return e=t,n=x(t),+k(e)==+k(n);var e,n}y.styleTagTransform=m(),y.setAttributes=d(),y.insert=A().bind(null,"head"),y.domAPI=a(),y.insertStyleElement=u(),i()(g.A,y),g.A&&g.A.locals&&g.A.locals;let I={};function f(){return I}function v(t,e){const n=f(),o=e?.weekStartsOn??e?.locale?.options?.weekStartsOn??n.weekStartsOn??n.locale?.options?.weekStartsOn??0,i=C(t),s=i.getDay(),a=(s<o?7:0)+s-o;return i.setDate(i.getDate()-a),i.setHours(0,0,0,0),i}function T(t,e){return function(t,e,n){return+v(t,n)==+v(e,n)}(t,x(t),e)}function w(t,e){return function(t,e){const n=C(t);return isNaN(e)?h(t,NaN):e?(n.setDate(n.getDate()+e),n):n}(t,-e)}class D{constructor(t){this.name=t,this.tasks=[]}setName(t){this.name=t}getName(){return this.name}setTasks(t){this.tasks=t}getTasks(){return this.tasks}getTask(t){return this.tasks.find((e=>e.getName()===t))}addTask(t){this.tasks.find((e=>e.getName()===t))||this.tasks.push(t)}deleteTask(t){this.tasks=this.tasks.filter((e=>e.name!==t))}getTodayTasks(){return this.tasks.filter((t=>b(C(new Date(t.getFormattedDate())))))}getThisWeeksTasks(){return this.tasks.filter((t=>T(w(C(new Date(t.getFormattedDate())),1))))}contains(t){return this.tasks.some((e=>e.getName()===t))}}class E{constructor(t,e,n,o){this.name=t,this.description=e,this.dueDate=n,this.priority=o}setName(t){this.name=t}getName(){return this.name}setDescription(t){this.description=t}getDescription(){return this.description}setDueDate(t){this.dueDate=t}getDueDate(){return this.dueDate}getFormattedDate(){return`${this.dueDate.split("-")[1]}-${this.dueDate.split("-")[2]}-${this.dueDate.split("-")[0]}`}setPriority(t){this.priority=t}getPriority(){return this.priority}}class L{constructor(){this.lists=[],this.lists.push(new D("All Tasks")),this.lists.push(new D("Today")),this.lists.push(new D("This Week"))}setLists(t){this.lists=t}getLists(){return this.lists}getList(t){return this.lists.find((e=>e.getName()===t))}addList(t){this.lists.find((e=>e.name===t.name))||this.lists.push(t)}deleteList(t){const e=this.lists.find((e=>e.getName()===t));this.lists.splice(this.lists.indexOf(e),1)}addToAllTaskList(){this.getList("All Tasks").tasks=[],this.lists.forEach((t=>{"Today"!==t.getName()&&"This Week"!==t.getName()&&"All Tasks"!==t.getName()&&t.getTasks().forEach((e=>{const n=`${e.getName()} (${t.getName()})`;this.getList("All Tasks").addTask(new E(n,e.getDescription(),e.getDueDate(),e.getPriority()))}))})),this.getList("All Tasks").setTasks(this.getList("All Tasks").getTasks().sort(((t,e)=>B(C(new Date(t.getFormattedDate())),C(new Date(e.getFormattedDate()))))))}addToTodayList(){this.getList("Today").tasks=[],this.lists.forEach((t=>{"Today"!==t.getName()&&"This Week"!==t.getName()&&"All Tasks"!==t.getName()&&t.getTodayTasks().forEach((e=>{const n=`${e.getName()} (${t.getName()})`;this.getList("Today").addTask(new E(n,e.getDescription(),e.getDueDate(),e.getPriority()))}))}))}addToThisWeekList(){this.getList("This Week").tasks=[],this.lists.forEach((t=>{"Today"!==t.getName()&&"This Week"!==t.getName()&&"All Tasks"!==t.getName()&&t.getThisWeeksTasks().forEach((e=>{const n=`${e.getName()} (${t.getName()})`;this.getList("This Week").addTask(new E(n,e.getDescription(),e.getDueDate(),e.getPriority()))}))})),this.getList("This Week").setTasks(this.getList("This Week").getTasks().sort(((t,e)=>B(C(new Date(t.getFormattedDate())),C(new Date(e.getFormattedDate()))))))}}class S{static saveToDo(t){localStorage.setItem("toDo",JSON.stringify(t))}static getToDo(){const t=Object.assign(new L,JSON.parse(localStorage.getItem("toDo")));return t.setLists(t.getLists().map((t=>Object.assign(new D,t)))),t.getLists().forEach((t=>t.setTasks(t.getTasks().map((t=>Object.assign(new E,t)))))),t}static addList(t){const e=S.getToDo();e.addList(t),S.saveToDo(e)}static deleteList(t){const e=S.getToDo();e.deleteList(t),S.saveToDo(e)}static addTask(t,e){const n=S.getToDo();n.getList(t).addTask(e),S.saveToDo(n)}static deleteTask(t,e){const n=S.getToDo();n.getList(t).deleteTask(e),S.saveToDo(n)}static renameTask(t,e,n){const o=S.getToDo();o.getList(t).getTask(e).setName(n),S.saveToDo(o)}static editDescription(t,e,n){const o=S.getToDo();o.getList(t).getTask(e).setDescription(n),S.saveToDo(o)}static editDueDate(t,e,n){const o=S.getToDo();o.getList(t).getTask(e).setDueDate(n),S.saveToDo(o)}static editPriority(t,e,n){const o=S.getToDo();o.getList(t).getTask(e).setPriority(n),S.saveToDo(o)}static updateAllTasksList(){const t=S.getToDo();t.addToAllTaskList(),S.saveToDo(t)}static updateTodayList(){const t=S.getToDo();t.addToTodayList(),S.saveToDo(t)}static updateThisWeekList(){const t=S.getToDo();t.addToThisWeekList(),S.saveToDo(t)}}const Y=S.getToDo();let q;function $(t){const e=document.querySelectorAll(".my-list-button"),n=document.querySelectorAll(".my-task-button");e.forEach((e=>{e.disabled=t})),n.forEach((e=>{e.disabled=t})),document.querySelectorAll(".list-delete").forEach((e=>{e.disabled=t}));const o=document.querySelectorAll(".remove-task"),i=document.querySelectorAll(".expand-task"),s=document.querySelectorAll(".edit-task");o.forEach((e=>{e.disabled=t})),i.forEach((e=>{e.disabled=t})),s.forEach((e=>{e.disabled=t}))}function N(){const t=document.getElementById("list-name-input"),e=document.querySelector(".list-name-error");t.addEventListener("input",(function(){const n=t.value.trim();S.getToDo().getList(n)?(t.style.border="2px solid red",e.textContent="Name Must Be Unique",e.style.display="flex"):""===n?(t.style.border="2px solid red",e.textContent="Name Must Not Be Empty",e.style.display="flex"):(t.style.border="",e.style.display="none")})),document.getElementById("list-submit").addEventListener("click",(n=>{n.preventDefault();const o=t.value.trim();""===o?(t.style.border="2px solid red",e.textContent="Name Must Not Be Empty",e.style.display="flex"):S.getToDo().getList(o)&&(t.style.border="2px solid red",e.textContent="Name Must Be Unique",e.style.display="flex")}))}function W(t){S.getToDo().getList(t).getTasks().forEach((e=>{const n=S.getToDo().getList("All Tasks"),o=S.getToDo().getList("Today"),i=S.getToDo().getList("This Week");n.contains(`${e.getName()} (${t})`)&&P("All Tasks",`${e.getName()} (${t})`),o.contains(`${e.getName()} (${t})`)&&P("Today",`${e.getName()} (${t})`),i.contains(`${e.getName()} (${t})`)&&P("This Week",`${e.getName()} (${t})`)})),S.deleteList(t)}function j(){const t=document.querySelector(".content-header-text"),e=document.getElementById("task-name-input"),n=document.querySelector(".task-name-error");e.addEventListener("input",(function(){const o=S.getToDo().getList(t.textContent),i=e.value.trim();""===i?(e.style.border="2px solid red",n.textContent="Name Must Not Be Empty",n.style.display="block"):o.contains(i)?(e.style.border="2px solid red",n.textContent="Name Must Be Unique To This List",n.style.display="block"):(e.style.border="",n.style.display="none")}));const o=document.getElementById("task-description-input"),i=document.querySelector(".task-desc-error");o.addEventListener("input",(function(){""===o.value.trim()?(o.style.border="2px solid red",i.textContent="Description Must Not Be Empty",i.style.display="block"):(o.style.border="",i.style.display="none")}));const s=document.getElementById("task-due-date"),a=document.querySelector(".task-date-error");s.addEventListener("input",(function(){const t=new Date(s.value),e=new Date,n=t.setDate(t.getDate()+1);e.setHours(0,0,0,0),s.value?n<e?(s.style.border="2px solid red",a.textContent="You Must Select A Valid Date",a.style.display="block"):(s.style.border="",a.style.display="none"):(s.style.border="2px solid red",a.textContent="You Must Select a Date",a.style.display="block")})),document.getElementById("task-submit").addEventListener("click",(t=>{t.preventDefault();const r=e.value.trim(),A=o.value.trim();""===r&&(e.style.border="2px solid red",n.textContent="Name Must Not Be Empty",n.style.display="block"),""===A&&(o.style.border="2px solid red",i.textContent="Description Must Not Be Empty",i.style.display="block"),s.value||(s.style.border="2px solid red",a.textContent="You Must Select a Date",a.style.display="block")}))}function Z(){const t=document.querySelector(".content-header-text"),e=document.getElementById("edit-task-name"),n=document.querySelector(".edit-name-error");e.addEventListener("input",(function(){const o=S.getToDo().getList(t.textContent),i=e.value.trim(),s=q;""===i?(e.style.border="2px solid red",n.textContent="Name Must Not Be Empty",n.style.display="block"):o.contains(i)&&i!==s?(e.style.border="2px solid red",n.textContent="Name Must Be Unique Within This List",n.style.display="block"):(e.style.border="",n.style.display="none")}));const o=document.getElementById("edit-description"),i=document.querySelector(".edit-desc-error");o.addEventListener("input",(function(){""===o.value.trim()?(o.style.border="2px solid red",i.textContent="Description Must Not Be Empty",i.style.display="block"):(o.style.border="",i.style.display="none")}));const s=document.getElementById("edit-due-date"),a=document.querySelector(".edit-date-error");s.addEventListener("input",(function(){const t=new Date(s.value),e=new Date,n=t.setDate(t.getDate()+1);e.setHours(0,0,0,0),s.value?n<e?(s.style.border="2px solid red",a.textContent="You Must Select A Valid Date",a.style.display="block"):(s.style.border="",a.style.display="none"):(s.style.border="2px solid red",a.textContent="You Must Select A Date",a.style.display="block")}))}function M(){const t=document.querySelector(".content-header-text"),e=document.querySelector(".content"),n=S.getToDo().getList(t.textContent).getTasks();e.innerHTML="",n.forEach((t=>{const n=t.getName(),o=t.getDescription(),i=t.getFormattedDate(),s=t.getPriority(),a=document.createElement("div");a.classList.add("task-container",`${s}`),a.innerHTML+=`<div class="task-header">${n}</div> <div class="task-date"><strong>Due Date:</strong> ${i}</div> <div class="task-description"><strong>Description:</strong><br> ${o}</div> <button class="expand-task myTask-expand"><i class="fa-solid fa-expand"></i></button>`,e.appendChild(a);const r=a.querySelector(".expand-task"),A=a.querySelector(".task-description");r.addEventListener("click",(()=>{const t=a.style.height,e=A.style.display;a.style.height="200px"===t?"90px":"200px",A.style.display="block"===e?"none":"block"}))}))}function z(){const t=document.querySelectorAll(".my-task-button"),e=document.querySelectorAll(".my-list-button");t.forEach((t=>{t.classList.remove("active")})),e.forEach((t=>{t.classList.remove("active")}))}function U(){const t=document.querySelector(".content"),e=document.querySelector(".content-header-text"),n=S.getToDo().getList(e.textContent).getTasks();n.sort(((t,e)=>new Date(t.getFormattedDate())-new Date(e.getFormattedDate()))),t.innerHTML="",n.forEach((n=>{const o=n.getName(),i=n.getDescription(),s=n.getFormattedDate(),a=n.getPriority(),r=document.createElement("div");r.classList.add("task-container",`${a}`),r.innerHTML+=`<div class="task-header">${o}</div> <div class="task-date"><strong>Due Date:</strong> ${s}</div> <div class="task-description"><strong>Description:</strong><br> ${i}</div> <div class="task-button-container"><button class="expand-task"><i class="fa-solid fa-expand"></i></button> <button class="remove-task"><i class="fa-solid fa-trash-can"></i></button></div> <button class="edit-task"><i class="fas fa-edit"></i></button>`,t.appendChild(r);const A=r.querySelector(".task-header").textContent;r.querySelector(".remove-task").addEventListener("click",(()=>{P(e.textContent,o),P("All Tasks",o),r.remove()}));const l=r.querySelector(".expand-task"),d=r.querySelector(".task-description"),c=r.querySelector(".edit-task");l.addEventListener("click",(()=>{const t=r.style.height,e=d.style.display,n=c.style.display;r.style.height="200px"===t?"90px":"200px",d.style.display="block"===e?"none":"block",c.style.display="block"===n?"none":"block"}));const u=document.querySelector(".edit-task-dialog");c.addEventListener("click",(()=>{u.style.display="flex",$(!0),function(t){const e=S.getToDo().getList(document.querySelector(".content-header-text").textContent).getTask(t),n=document.getElementById("edit-task-name"),o=document.getElementById("edit-description"),i=document.getElementById("edit-due-date"),s=document.getElementById("edit-priority");n.value=e.getName(),o.value=e.getDescription(),i.value=e.getDueDate(),s.value=e.getPriority(),q=t}(A),function(){const t=document.getElementById("edit-task-name"),e=document.getElementById("edit-description"),n=document.getElementById("edit-due-date"),o=document.querySelector(".edit-name-error"),i=document.querySelector(".edit-desc-error"),s=document.querySelector(".edit-date-error");t.style.border="",o.style.display="none",e.style.border="",i.style.display="none",n.style.border="",s.style.display="none"}()}))}))}function P(t,e){S.deleteTask(t,e),S.deleteTask("All Tasks",`${e} (${t})`),S.deleteTask("Today",`${e} (${t})`),S.deleteTask("This Week",`${e} (${t})`)}(function(){const t=document.querySelector(".content-header-text"),e=document.querySelector(".list-dialog"),n=document.querySelector(".task-dialog"),o=document.querySelector(".edit-task-dialog"),i=document.querySelector(".new-list-button"),s=document.querySelector(".new-task-button");i.addEventListener("click",(()=>{e.style.display="flex",n.style.display="none",o.style.display="none",function(){const t=document.getElementById("list-name-input");t.value="",t.style.border="",document.querySelector(".list-name-error").style.display="none"}(),$(!0)})),s.addEventListener("click",(()=>{n.style.display="flex",e.style.display="none",o.style.display="none",function(){const t=document.getElementById("task-name-input"),e=document.getElementById("task-description-input"),n=document.getElementById("task-due-date"),o=document.querySelector(".task-name-error"),i=document.querySelector(".task-desc-error"),s=document.querySelector(".task-date-error");t.value="",t.style.border="",o.style.display="none",e.value="",e.style.border="",i.style.display="none",n.value="",n.style.border="",s.style.display="none"}(),$(!0)}));const a=document.getElementById("list-submit"),r=document.querySelector(".list-close");a.addEventListener("click",(t=>{t.preventDefault(),function(){const t=document.querySelector(".my-lists"),e=document.getElementById("list-name-input"),n=document.createElement("li");n.classList.add("my-lists-selector");const o=document.createElement("button");o.classList.add("my-list-button"),o.textContent=e.value;const i=document.createElement("button");i.classList.add("list-delete"),i.innerHTML+='<i class="fa-solid fa-trash-can"></i>',Y.getLists();const s=document.querySelector(".list-dialog");""===e.value||S.getToDo().getList(e.value)?N():(S.addList(new D(e.value)),n.appendChild(o),n.appendChild(i),t.appendChild(n),s.style.display="none");const a=document.querySelector(".content-header-text"),r=document.querySelectorAll(".my-list-button"),A=document.querySelector(".new-task-button"),l=document.querySelector(".line-div-content");r.forEach((t=>{t.addEventListener("click",(()=>{a.textContent=t.textContent,A.style.display="block",l.style.display="block",z(),U(),t.classList.add("active")}))}));const d=document.querySelector(".content");i.addEventListener("click",(()=>{n.remove(),a.textContent="",A.style.display="none",l.style.display="none",d.innerHTML="",W(o.textContent)}))}(),$(!1)})),r.addEventListener("click",(()=>{e.style.display="none",$(!1)}));const A=document.getElementById("task-submit"),l=document.querySelector(".task-close");A.addEventListener("click",(t=>{t.preventDefault(),function(){const t=document.getElementById("task-name-input"),e=document.getElementById("task-description-input"),n=document.getElementById("task-due-date"),o=document.getElementById("task-priority"),i=new E(t.value,e.value,n.value,o.value),s=document.querySelector(".content-header-text"),a=S.getToDo().getList(s.textContent),r=document.querySelector(".task-dialog"),A=new Date(n.value),l=new Date,d=A.setDate(A.getDate()+1);l.setHours(0,0,0,0),""!==t.value&&!a.contains(t.value)&&""!==e.value&&n.value&&d>=l?(S.addTask(s.textContent,i),S.updateAllTasksList(),S.updateThisWeekList(),S.updateTodayList(),U(),r.style.display="none"):j()}(),$(!1)})),l.addEventListener("click",(()=>{n.style.display="none",$(!1)}));const d=document.querySelector(".task-save"),c=document.querySelector(".close-edit-task");d.addEventListener("click",(()=>{$(!1),function(){const t=S.getToDo().getList(document.querySelector(".content-header-text").textContent).getName(),e=document.getElementById("edit-task-name").value,n=document.getElementById("edit-description").value,o=document.getElementById("edit-due-date").value,i=document.getElementById("edit-priority").value,s=document.querySelector(".edit-task-dialog"),a=new Date(o),r=new Date,A=a.setDate(a.getDate()+1);if(r.setHours(0,0,0,0),a.setHours(0,0,0,0),""!==e&&(e===q||!S.getToDo().getList(t).contains(e))&&""!==n&&A>=r){S.editDescription(t,q,n),S.editDueDate(t,q,o),S.editPriority(t,q,i),S.renameTask(t,q,e),s.style.display="none",document.querySelectorAll(".task-container").forEach((t=>{t.remove()})),U(),S.editDescription("All Tasks",`${q} (${t})`,n),S.editDueDate("All Tasks",`${q} (${t})`,o),S.editPriority("All Tasks",`${q} (${t})`,i),S.renameTask("All Tasks",`${q} (${t})`,`${e} (${t})`);const A=S.getToDo().getList("Today");A.contains(`${q} (${t})`)?a.getTime()!==r.getTime()?P("Today",`${q} (${t})`):(S.editDescription("Today",`${q} (${t})`,n),S.editDueDate("Today",`${q} (${t})`,o),S.editPriority("Today",`${q} (${t})`,i),S.renameTask("Today",`${q} (${t})`,`${e} (${t})`)):A.contains(`${q} (${t})`)||a.getTime()!==r.getTime()||S.addTask("Today",new E(`${q} (${t})`,n,o,i));const l=S.getToDo().getList("This Week"),d=l.getTask(`${q} (${t})`),c=new Date(r.setDate(r.getDate()-r.getDay())),u=new Date(r.setDate(c.getDate()+6));a>=c&&a<=u?l.contains(`${q} (${t})`)?(S.editDescription("This Week",`${q} (${t})`,n),S.editDueDate("This Week",`${q} (${t})`,o),S.editPriority("This Week",`${q} (${t})`,i),S.renameTask("This Week",`${q} (${t})`,`${e} (${t})`)):S.addTask("This Week",new E(`${q} (${t})`,n,o,i)):d&&P("This Week",`${q} (${t})`),S.updateAllTasksList(),S.updateThisWeekList()}else Z()}()})),c.addEventListener("click",(()=>{o.style.display="none",$(!1)}));const u=document.querySelectorAll(".my-task-button"),p=document.querySelector(".line-div-content");u.forEach((e=>{e.addEventListener("click",(()=>{t.textContent=e.textContent,s.style.display="none",p.style.display="block",z(),e.classList.add("active"),M()}))}))})(),N(),j(),Z(),Y.getLists().forEach((t=>{"All Tasks"!==t.name&&"Today"!==t.name&&"This Week"!==t.name&&function(t){const e=document.querySelector(".my-lists"),n=t,o=document.createElement("li");o.classList.add("my-lists-selector");const i=document.createElement("button");i.classList.add("my-list-button"),i.textContent=n;const s=document.createElement("button");s.classList.add("list-delete"),s.innerHTML+='<i class="fa-solid fa-trash-can"></i>',o.appendChild(i),o.appendChild(s),e.appendChild(o);const a=document.querySelector(".content-header-text"),r=document.querySelectorAll(".my-list-button"),A=document.querySelector(".new-task-button"),l=document.querySelector(".line-div-content");r.forEach((t=>{t.addEventListener("click",(()=>{a.textContent=t.textContent,A.style.display="block",l.style.display="block",z(),t.classList.add("active"),U()}))}));const d=document.querySelector(".content");s.addEventListener("click",(()=>{o.remove(),a.textContent="",A.style.display="none",l.style.display="none",d.innerHTML="",W(i.textContent)}))}(t.name)})),M(),window.onload=function(){localStorage.getItem("toDo")||S.saveToDo(new L)}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,